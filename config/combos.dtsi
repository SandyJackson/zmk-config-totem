/*                                      38 KEY MATRIX / LAYOUT MAPPING

		╭────────────────────┬────────────────────╮        ╭──────────────────────┬─────────────────────╮
		│  0   1   2   3   4 │  5   6   7   8   9 │        │  LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
 ╭──╯ 10  11  12  13  14 │ 15  16  17  18  19 ╰───╮ ╭──╯  LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 ╰───╮
 │ 20 21  22  23  24  25 │ 26  27  28  29  30  31 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
 ╰──────────╮ 32  33  34 │ 35  36  37 ╭───────────╯ ╰──────────╮  LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
						╰────────────┴────────────╯                        ╰──────────────┴─────────────╯
*/

#define COMBO_TERM_FAST 30
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

/* Combo to switch to alternate layout */
ZMK_COMBO(altlayer,  &tog ALT,     LT4 RT4, BASE ALT ALT2 , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(alt2layer, &tog ALT2,    LB5 RB5, BASE ALT ALT2, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Combos for brackets etc. symmetrically across */
ZMK_COMBO(lbrc,  &kp LBRC,     LT1 LT2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,     RT1 RT2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbkt,  &kp LBKT,     LM1 LM2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,     RM1 RM2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lpar,  &kp LPAR,     LB1 LB2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rpar,  &kp RPAR,     RB1 RB2, ALL , COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Symbol Combos that are also used in Neovim logically placed */
ZMK_COMBO(caret,  &kp CARET,  LM0 LM1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(dollar, &kp DOLLAR, RM0 RM1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Plus equals minus on inner column (index )logically laid out */
ZMK_COMBO(plus,   &kp PLUS,  RT0 LT0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(equals, &kp EQUAL, RM0 LM0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(minus,  &kp MINUS, RB0 LB0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* 2nd col (index)Exclamation, full stop and question mark  */
ZMK_COMBO(exclamation, &kp EXCLAMATION, RT1 LT1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(period,      &kp DOT,         RM1 LM1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(question,    &kp QUESTION,    RB1 LB1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Common punctuation in coding on middle fingers (3rd col)*/
ZMK_COMBO(pipe,       &kp PIPE,       RT2 LT2, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(underscore, &kp UNDERSCORE, RM2 LM2, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(tilde,      &kp TILDE,      RB2 LB2, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)


/* Ring finger (awkard) for less common*/
ZMK_COMBO(greater, &kp GREATER_THAN, RT3 LT3, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(less,    &kp LESS_THAN,    RB3 LB3, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Onesided index-middle finger combos (inner cols) for common options */
ZMK_COMBO(asterisk,  &kp ASTERISK,  RT1 RT0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(at,        &kp AT,        RB1 RB0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(hash,      &kp HASH,      LT1 LT0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(backslash, &kp BSLH, LB1 LB0, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
